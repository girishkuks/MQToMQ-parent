<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ComIbmJavaCompute.msgnode="ComIbmJavaCompute.msgnode" xmlns:ComIbmMQInput.msgnode="ComIbmMQInput.msgnode" xmlns:ComIbmMQOutput.msgnode="ComIbmMQOutput.msgnode" xmlns:ComIbmMQReply.msgnode="ComIbmMQReply.msgnode" xmlns:FailureHandlerWithErrorQueue.subflow="FailureHandlerWithErrorQueue.subflow" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:eflow="http://www.ibm.com/wbi/2005/eflow" xmlns:mbmonitor="http://www.ibm.com/wbi/2008/eflow_mbmonitor"
    xmlns:utility="http://www.ibm.com/wbi/2005/eflow_utility" nsURI="Main.msgflow" nsPrefix="Main.msgflow">
  <eClassifiers xmi:type="eflow:FCMComposite" name="FCMComposite_1">
    <eSuperTypes href="http://www.ibm.com/wbi/2005/eflow#//FCMBlock"/>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.PROVIDER_QUEUE" name="PROVIDER_QUEUE" lowerBound="1" defaultValueLiteral="MQToMQ.PROVIDER">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.REPLY_QUEUE" name="REPLY_QUEUE" lowerBound="1" defaultValueLiteral="MQToMQ.RESPONSE">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.OUTPUT_QUEUE" name="OUTPUT_QUEUE" lowerBound="1" defaultValueLiteral="MQToMQ.OUT">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.REPLY_QUEUE_MGR" name="REPLY_QUEUE_MGR" defaultValueLiteral="">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.OUTPUT_QUEUE_MGR" name="OUTPUT_QUEUE_MGR" defaultValueLiteral="">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.PROVIDER_QUEUE_MGR" name="PROVIDER_QUEUE_MGR" defaultValueLiteral="">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.LOGGER_NAME" name="LOGGER_NAME" defaultValueLiteral="ApplicationLogger">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eStructuralFeatures>
    <translation xmi:type="utility:TranslatableString" key="Main" bundleName="Main" pluginId="MQToMQ-app"/>
    <colorGraphic16 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/MQToMQ-app/icons/full/obj16/Main.gif"/>
    <colorGraphic32 xmi:type="utility:GIFFileGraphic" resourceName="platform:/plugin/MQToMQ-app/icons/full/obj30/Main.gif"/>
    <composition>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_8" location="19,52" queueName="MQToMQ.IN" messageDomainProperty="BLOB">
        <translation xmi:type="utility:ConstantString" string="Read Request"/>
        <shortDescription xmi:type="utility:ConstantString" string="Read request message from input queue"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Read Request.terminal.out" eventIdentity="Read Request.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator dataLocation="$Root/MQMD/MsgId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Read Request.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
        <monitorEvents eventSourceDescription="Catch terminal" eventSourceName="Read Request.terminal.catch" eventIdentity="Read Request.CatchTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator dataLocation="$Root/MQMD/MsgId" eventCorrelation="dataLocation"/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Read Request.CatchTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmMQOutput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_10" location="765,58" destinationMode="list" queueManagerName="" validateMaster="none">
        <translation xmi:type="utility:ConstantString" string="Propagate Request"/>
        <shortDescription xmi:type="utility:ConstantString" string="Output message onto service input queue"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Propagate Request.terminal.out" eventIdentity="Propagate Request.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Propagate Request.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_35" location="403,56" javaClass="com.anz.MQToMQ.compute.RequestTransformCompute" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Transform Request"/>
        <shortDescription xmi:type="utility:ConstantString" string="User defined Java transformation "/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Transform Request.terminal.out" eventIdentity="Transform Request.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Transform Request.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_5" location="376,229" javaClass="com.anz.MQToMQ.compute.ResponseTransformCompute" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Transform Response"/>
        <shortDescription xmi:type="utility:ConstantString" string="User defined Java transformation"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Transform Response.terminal.out" eventIdentity="Transform Response.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Transform Response.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmMQInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_11" location="29,224" queueName="MQToMQ.RESPONSE" messageDomainProperty="BLOB">
        <translation xmi:type="utility:ConstantString" string="Response"/>
        <shortDescription xmi:type="utility:ConstantString" string="Read response from MQ service"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Response.terminal.out" eventIdentity="Response.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Response.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_1" location="615,58" javaClass="com.anz.MQToMQ.compute.SaveModifyHeader" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Save Modify Header"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Save Modify Header.terminal.out" eventIdentity="Save Modify Header.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Save Modify Header.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_2" location="107,224" javaClass="com.anz.MQToMQ.compute.RetrieveOriginalHeader" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Retrieve Original Header"/>
        <monitorEvents eventSourceDescription="Out terminal" eventSourceName="Retrieve Original Header.terminal.out" eventIdentity="Retrieve Original Header.OutTerminal">
          <eventXMLDoc xmi:type="mbmonitor:MonitorEvent">
            <applicationData dataLocation="$LocalEnvironment/MQ" isXPath="true" complexData="true"/>
            <globalTransactionCorrelator/>
            <parentTransactionCorrelator/>
            <localTransactionCorrelator/>
            <bitStreamData encoding="base64Binary"/>
            <eventName literal="Retrieve Original Header.OutTerminal"/>
            <eventFilter dataLocation="true()" isXPath="true"/>
          </eventXMLDoc>
        </monitorEvents>
      </nodes>
      <nodes xmi:type="FailureHandlerWithErrorQueue.subflow:FCMComposite_1" xmi:id="FCMComposite_1_6" location="205,142">
        <translation xmi:type="utility:ConstantString" string="FailureHandlerWithErrorQueue"/>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_3" location="190,54" javaClass="com.anz.MQToMQ.compute.LoggingInputCompute" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Logging Input"/>
      </nodes>
      <nodes xmi:type="ComIbmJavaCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_7" location="670,233" javaClass="com.anz.MQToMQ.compute.LoggingOutputCompute" javaClassLoader="{MQToMQ-lib}">
        <translation xmi:type="utility:ConstantString" string="Logging Output"/>
      </nodes>
      <nodes xmi:type="ComIbmMQReply.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_9" location="809,232">
        <translation xmi:type="utility:ConstantString" string="MQ Reply"/>
      </nodes>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_5" targetNode="FCMComposite_1_1" sourceNode="FCMComposite_1_35" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_6" targetNode="FCMComposite_1_10" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_14" targetNode="FCMComposite_1_2" sourceNode="FCMComposite_1_11" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_17" targetNode="FCMComposite_1_5" sourceNode="FCMComposite_1_2" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_11" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_11" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_12" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_1" targetNode="FCMComposite_1_3" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_2" targetNode="FCMComposite_1_35" sourceNode="FCMComposite_1_3" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_3" targetNode="FCMComposite_1_7" sourceNode="FCMComposite_1_5" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_7" targetNode="FCMComposite_1_7" sourceNode="FCMComposite_1_6" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_8" targetNode="FCMComposite_1_9" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
    </composition>
    <propertyOrganizer>
      <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.PROVIDER_QUEUE">
        <propertyName xmi:type="utility:TranslatableString" key="Property.PROVIDER_QUEUE" bundleName="Main" pluginId="MQToMQ-app"/>
        <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.REPLY_QUEUE">
          <propertyName xmi:type="utility:TranslatableString" key="Property.REPLY_QUEUE" bundleName="Main" pluginId="MQToMQ-app"/>
          <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.OUTPUT_QUEUE">
            <propertyName xmi:type="utility:TranslatableString" key="Property.OUTPUT_QUEUE" bundleName="Main" pluginId="MQToMQ-app"/>
            <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.REPLY_QUEUE_MGR">
              <propertyName xmi:type="utility:TranslatableString" key="Property.REPLY_QUEUE_MGR" bundleName="Main" pluginId="MQToMQ-app"/>
              <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.OUTPUT_QUEUE_MGR">
                <propertyName xmi:type="utility:TranslatableString" key="Property.OUTPUT_QUEUE_MGR" bundleName="Main" pluginId="MQToMQ-app"/>
                <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.PROVIDER_QUEUE_MGR">
                  <propertyName xmi:type="utility:TranslatableString" key="Property.PROVIDER_QUEUE_MGR" bundleName="Main" pluginId="MQToMQ-app"/>
                  <propertyDescriptor groupName="Group.MQ" configurable="true" userDefined="true" describedAttribute="Property.LOGGER_NAME">
                    <propertyName xmi:type="utility:TranslatableString" key="Property.LOGGER_NAME" bundleName="Main" pluginId="MQToMQ-app"/>
                  </propertyDescriptor>
                </propertyDescriptor>
              </propertyDescriptor>
            </propertyDescriptor>
          </propertyDescriptor>
        </propertyDescriptor>
      </propertyDescriptor>
    </propertyOrganizer>
    <stickyBoard/>
    <patternAnnotations/>
  </eClassifiers>
</ecore:EPackage>
